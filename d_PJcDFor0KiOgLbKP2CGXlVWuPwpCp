loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/0KUNh1t5jCWeTAFM/8mqsGtYULMu9MfI8/main/d_title"))()

local plr = game:GetService("Players").LocalPlayer
local Spoof
Spoof =
    hookmetamethod(
    game,
    "__index",
    function(self, ...)
        if ... == "WalkSpeed" then
            return 15
        end
        if ... == "JumpPower" then
            return 25
        end
        return Spoof(self, ...)
    end
)

getgenv().Tab =
    getgenv().Window:Tab(
    {
        Text = "Character"
    }
)

getgenv().Section =
    getgenv().Tab:Section(
    {
        Text = "Character"
    }
)

getgenv().Tab2 =
    getgenv().Window:Tab(
    {
        Text = "Visual"
    }
)

getgenv().Section2 =
    getgenv().Tab2:Section(
    {
        Text = "Visual"
    }
)

getgenv().Tab3 =
    getgenv().Window:Tab(
    {
        Text = "Room"
    }
)

getgenv().Section3 =
    getgenv().Tab3:Section(
    {
        Text = "Room (Client Side)"
    }
)

getgenv().Section3_1 =
    getgenv().Tab3:Section(
    {
        Text = "Spawn (Client Side)"
    }
)

getgenv().Tab4 =
    getgenv().Window:Tab(
    {
        Text = "Miscellaneous"
    }
)

getgenv().Section4 =
    getgenv().Tab4:Section(
    {
        Text = "Miscellaneous"
    }
)

getgenv().Tab5 =
    getgenv().Window:Tab(
    {
        Text = "Games"
    }
)

getgenv().Section5 =
    getgenv().Tab5:Section(
    {
        Text = "Games"
    }
)

getgenv().Tab6 =
    getgenv().Window:Tab(
    {
        Text = "Credits"
    }
)

getgenv().Section6 =
    getgenv().Tab6:Section(
    {
        Text = "Credits"
    }
)

getgenv().Section:Slider(
    {
        Text = "Walkspeed",
        Default = 22.5,
        Minimum = 1,
        Maximum = 200,
        Callback = function(Value)
        local Services = setmetatable({}, {__index = function(Self, Index)
                local NewService = game.GetService(game, Index)
                if NewService then
                    Self[Index] = NewService
                end
                return NewService
            end})
            
            local RunningSpeed = Value
            
            
            local function SetWalkspeed(Speed)
                pcall(function()
                    Services.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = Speed
                end)
            end
            
                    Services.RunService:BindToRenderStep("LoopSpeed", Enum.RenderPriority.Character.Value + 1, function()
                        SetWalkspeed(RunningSpeed)
                    end)
        end
    }
)

getgenv().Section:Toggle(
    {
        Text = "Noclip",
        Callback = function(bool)
            function doNoclip()
                if bool == true then
                    game.Players.LocalPlayer.Character.Collision.CanCollide = false
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
                end
            end

            while bool == true do
                game:GetService("RunService").RenderStepped:Wait()
                doNoclip()
            end
            if bool == false then
                game.Players.LocalPlayer.Character.Collision.CanCollide = true
                game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = true
            end
        end
    }
)

getgenv().Section2:Toggle(
    {
        Text = "Item Esp",
        Callback = function(bool)
            if bool == true then
                local NotificationHolder =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
                local Notification =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
                Notification:Notify(
                    {Title = "Item Esp Enabled", Description = "You Can Now See All The Doors."},
                    {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 2, Type = "default"}
                )
                function doItemEsp()
                    if bool == true then
                        local CurrentDoor =
                            workspace.CurrentRooms[
                            tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)
                        ]:WaitForChild("Assets")

                        getgenv().ItemESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()

                        getgenv().ItemESP.Tracers = false
                        getgenv().ItemESP.Names = true
                        getgenv().ItemESP.Boxes = true
                        getgenv().ItemESP.Players = false
                        getgenv().ItemESP.FaceCamera = true
                        getgenv().ItemESP.BoxShift = CFrame.new(0, 0, 0)
                        getgenv().ItemESP.BoxSize = Vector3.new(1.75, 1.75, 1.75)

                        getgenv().ItemESP:AddObjectListener(
                            CurrentDoor,
                            {
                                Recursive = true,
                                Name = "Key",
                                Type = "MeshPart",
                                CustomName = "Key",
                                Color = Color3.fromRGB(0, 255, 0),
                                IsEnabled = "itemesp"
                            }
                        )

                        getgenv().ItemESP:AddObjectListener(
                            CurrentDoor,
                            {
                                Recursive = true,
                                Name = "LeverForGate",
                                Type = "Model",
                                CustomName = "Lever",
                                Color = Color3.fromRGB(0, 255, 0),
                                IsEnabled = "itemesp"
                            }
                        )

                        getgenv().ItemESP:AddObjectListener(
                            CurrentDoor,
                            {
                                Recursive = true,
                                Name = "LiveHintBook",
                                Type = "Model",
                                CustomName = "Book",
                                Color = Color3.fromRGB(0, 255, 0),
                                IsEnabled = "itemesp"
                            }
                        )

                        workspace.CurrentRooms.ChildAdded:Connect(
                            function(DescendantKey)
                                if DescendantKey:IsA("Model") then
                                    local CurrentDoor =
                                        workspace.CurrentRooms[
                                        tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)
                                    ]:WaitForChild("Assets")
                                    getgenv().ItemESP:AddObjectListener(
                                        CurrentDoor,
                                        {
                                            Recursive = true,
                                            Name = "Key",
                                            Type = "MeshPart",
                                            CustomName = "Key",
                                            Color = Color3.fromRGB(0, 255, 0),
                                            IsEnabled = "itemesp"
                                        }
                                    )

                                    getgenv().ItemESP.itemesp = true
                                    getgenv().ItemESP:Toggle(true)
                                end
                            end
                        )

                        workspace.CurrentRooms.ChildAdded:Connect(
                            function(DescendantLever)
                                if DescendantLever:IsA("Model") then
                                    local CurrentDoor =
                                        workspace.CurrentRooms[
                                        tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)
                                    ]:WaitForChild("Assets")
                                    getgenv().ItemESP:AddObjectListener(
                                        CurrentDoor,
                                        {
                                            Recursive = true,
                                            Name = "LeverForGate",
                                            Type = "Model",
                                            CustomName = "Lever",
                                            Color = Color3.fromRGB(0, 255, 0),
                                            IsEnabled = "itemesp"
                                        }
                                    )
                                end
                            end
                        )

                        workspace.CurrentRooms.ChildAdded:Connect(
                            function(DescendantBook)
                                if DescendantBook:IsA("Model") then
                                    local CurrentDoor =
                                        workspace.CurrentRooms[
                                        tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)
                                    ]:WaitForChild("Assets")
                                    getgenv().ItemESP:AddObjectListener(
                                        CurrentDoor,
                                        {
                                            Recursive = true,
                                            Name = "LiveHintBook",
                                            Type = "Model",
                                            CustomName = "Book",
                                            Color = Color3.fromRGB(0, 255, 0),
                                            IsEnabled = "itemesp"
                                        }
                                    )

                                    getgenv().ItemESP.itemesp = true
                                    getgenv().ItemESP:Toggle(true)
                                end
                            end
                        )
                    end
                end

                doItemEsp()

                getgenv().ItemESP.itemesp = true
                getgenv().ItemESP:Toggle(true)
            elseif bool == false then
                local NotificationHolder =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
                local Notification =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
                Notification:Notify(
                    {Title = "Item Esp Disabled", Description = "You Can No Longer See All The Items."},
                    {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 2, Type = "default"}
                )

                getgenv().ItemESP.itemesp = false
                getgenv().ItemESP:Toggle(false)
            end
        end
    }
)

getgenv().Section2:Toggle(
    {
        Text = "Door Esp",
        Callback = function(bool)
            if bool == true then
                local NotificationHolder =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
                local Notification =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
                Notification:Notify(
                    {Title = "Door Esp Enabled", Description = "You Can Now See All The Doors."},
                    {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 2, Type = "default"}
                )
                function doDoorEsp()
                    if bool == true then
                        local CurrentDoor =
                            workspace.CurrentRooms[
                            tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)
                        ].Door.Door

                        getgenv().DoorESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()

                        getgenv().DoorESP.Tracers = false
                        getgenv().DoorESP.Names = true
                        getgenv().DoorESP.Boxes = true
                        getgenv().DoorESP.Players = false
                        getgenv().DoorESP.BoxShift = CFrame.new(0, -2, 0)
                        getgenv().DoorESP.BoxSize = Vector3.new(6, 8.5, 0)

                        getgenv().DoorESP:AddObjectListener(
                            CurrentDoor,
                            {
                                Recursive = true,
                                Name = "Sign",
                                Type = "MeshPart",
                                CustomName = "Door",
                                Color = Color3.fromRGB(0, 0, 255),
                                IsEnabled = "dooresp"
                            }
                        )

                        workspace.CurrentRooms.ChildAdded:Connect(
                            function(Descendant)
                                if Descendant:IsA("Model") then
                                    local CurrentDoor =
                                        workspace.CurrentRooms[
                                        tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)
                                    ].Door.Door
                                    getgenv().DoorESP:AddObjectListener(
                                        CurrentDoor,
                                        {
                                            Recursive = true,
                                            Name = "Sign",
                                            Type = "MeshPart",
                                            CustomName = "Door",
                                            Color = Color3.fromRGB(0, 0, 255),
                                            IsEnabled = "dooresp"
                                        }
                                    )

                                    getgenv().DoorESP.dooresp = true
                                    getgenv().DoorESP:Toggle(true)
                                end
                            end
                        )
                    end
                end

                doDoorEsp()

                getgenv().DoorESP.dooresp = true
                getgenv().DoorESP:Toggle(true)
            elseif bool == false then
                local NotificationHolder =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
                local Notification =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
                Notification:Notify(
                    {Title = "Door Esp Disabled", Description = "You Can No Longer See All The Doors."},
                    {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 2, Type = "default"}
                )

                getgenv().DoorESP.dooresp = false
                getgenv().DoorESP:Toggle(false)
            end
        end
    }
)

getgenv().Section2:Toggle(
    {
        Text = "Entity Esp",
        Callback = function(bool)
            if bool == true then
                local NotificationHolder =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
                local Notification =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
                Notification:Notify(
                    {Title = "Entity Esp Enabled", Description = "You Can Now See All The Entities."},
                    {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 2, Type = "default"}
                )
                function doEntityEsp()
                    if bool == true then
                        getgenv().EntityESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()

                        local CurrentDoor =
                            workspace.CurrentRooms[
                            tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)
                        ]:WaitForChild("FigureSetup")

                        getgenv().EntityESP.Tracers = true
                        getgenv().EntityESP.Names = true
                        getgenv().EntityESP.Boxes = true
                        getgenv().EntityESP.Players = false
                        getgenv().EntityESP.FaceCamera = true
                        getgenv().EntityESP.BoxShift = CFrame.new(0, 0, 0)
                        getgenv().EntityESP.BoxSize = Vector3.new(6, 8.5, 0)

                        getgenv().EntityESP:AddObjectListener(
                            CurrentDoor,
                            {
                                Recursive = true,
                                Name = "FigureRagdoll",
                                Type = "Model",
                                CustomName = "Figure",
                                Color = Color3.fromRGB(255, 0, 0),
                                IsEnabled = "entityesp"
                            }
                        )
                    end
                end

                if workspace:FindFirstChild("RushMoving") ~= nil then
                    getgenv().EntityESP:AddObjectListener(
                        workspace,
                        {
                            Recursive = true,
                            Name = "RushMoving",
                            Type = "Model",
                            CustomName = "Rush",
                            Color = Color3.fromRGB(255, 0, 0),
                            IsEnabled = "entityesp"
                        }
                    )

                    getgenv().EntityESP.entityesp = true
                    getgenv().EntityESP:Toggle(true)
                end

                if workspace:FindFirstChild("Lookman") ~= nil then
                    getgenv().EntityESP:AddObjectListener(
                        workspace,
                        {
                            Recursive = true,
                            Name = "Lookman",
                            Type = "Model",
                            CustomName = "Look Man",
                            Color = Color3.fromRGB(255, 0, 0),
                            IsEnabled = "entityesp"
                        }
                    )

                    getgenv().EntityESP.entityesp = true
                    getgenv().EntityESP:Toggle(true)
                end

                workspace.ChildAdded:Connect(
                    function(Descendant)
                        if Descendant:IsA("Model") then
                            task.wait(0.15)

                            if workspace:FindFirstChild("RushMoving") ~= nil then
                                getgenv().EntityESP:AddObjectListener(
                                    workspace,
                                    {
                                        Recursive = true,
                                        Name = "RushMoving",
                                        Type = "Model",
                                        CustomName = "Rush",
                                        Color = Color3.fromRGB(255, 0, 0),
                                        IsEnabled = "entityesp"
                                    }
                                )

                                getgenv().EntityESP.entityesp = true
                                getgenv().EntityESP:Toggle(true)
                            end

                            if workspace:FindFirstChild("Lookman") ~= nil then
                                getgenv().EntityESP:AddObjectListener(
                                    workspace,
                                    {
                                        Recursive = true,
                                        Name = "Lookman",
                                        Type = "Model",
                                        CustomName = "Look Man",
                                        Color = Color3.fromRGB(255, 0, 0),
                                        IsEnabled = "entityesp"
                                    }
                                )

                                getgenv().EntityESP.entityesp = true
                                getgenv().EntityESP:Toggle(true)
                            end

                            if workspace:FindFirstChild("AmbushMoving") ~= nil then
                                getgenv().EntityESP:AddObjectListener(
                                    workspace,
                                    {
                                        Recursive = true,
                                        Name = "AmbushMoving",
                                        Type = "Model",
                                        CustomName = "Ambush",
                                        Color = Color3.fromRGB(255, 0, 0),
                                        IsEnabled = "entityesp"
                                    }
                                )

                                getgenv().EntityESP.entityesp = true
                                getgenv().EntityESP:Toggle(true)
                            end

                            if workspace:FindFirstChild("SeekMoving") ~= nil then
                                getgenv().EntityESP:AddObjectListener(
                                    workspace,
                                    {
                                        Recursive = true,
                                        Name = "SeekMoving",
                                        Type = "Model",
                                        CustomName = "Seek",
                                        Color = Color3.fromRGB(255, 0, 0),
                                        IsEnabled = "entityesp"
                                    }
                                )

                                getgenv().EntityESP.entityesp = true
                                getgenv().EntityESP:Toggle(true)
                            end

                            getgenv().EntityESP.entityesp = true
                            getgenv().EntityESP:Toggle(true)
                        end
                    end
                )

                workspace.CurrentRooms.ChildAdded:Connect(
                    function(Descendant)
                        if Descendant:IsA("Model") then
                            getgenv().EntityESP.Tracers = true

                            local CurrentDoor =
                                workspace.CurrentRooms[
                                tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)
                            ]:WaitForChild("FigureSetup")

                            getgenv().EntityESP:AddObjectListener(
                                CurrentDoor,
                                {
                                    Recursive = true,
                                    Name = "FigureRagdoll",
                                    Type = "Model",
                                    CustomName = "Figure",
                                    Color = Color3.fromRGB(255, 0, 0),
                                    IsEnabled = "entityesp"
                                }
                            )

                            getgenv().EntityESP.entityesp = true
                            getgenv().EntityESP:Toggle(true)
                        end
                    end
                )

                doEntityEsp()

                getgenv().EntityESP.entityesp = true
                getgenv().EntityESP:Toggle(true)
            else
                local NotificationHolder =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
                local Notification =
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
                Notification:Notify(
                    {Title = "Entity Esp Disabled", Description = "You Can No Longer See All The Entities."},
                    {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 2, Type = "default"}
                )

                getgenv().EntityESP.entityesp = false
                getgenv().EntityESP:Toggle(false)
            end
        end
    }
)

getgenv().Section2:Toggle(
    {
        Text = "Fullbright",
        Callback = function(bool)
            if not _G.FullBrightExecuted then
                _G.FullBrightEnabled = false

                _G.NormalLightingSettings = {
                    Brightness = game:GetService("Lighting").Brightness,
                    ClockTime = game:GetService("Lighting").ClockTime,
                    FogEnd = game:GetService("Lighting").FogEnd,
                    GlobalShadows = game:GetService("Lighting").GlobalShadows,
                    Ambient = game:GetService("Lighting").Ambient
                }

                game:GetService("Lighting"):GetPropertyChangedSignal("Brightness"):Connect(
                    function()
                        if
                            game:GetService("Lighting").Brightness ~= 1 and
                                game:GetService("Lighting").Brightness ~= _G.NormalLightingSettings.Brightness
                         then
                            _G.NormalLightingSettings.Brightness = game:GetService("Lighting").Brightness
                            if not _G.FullBrightEnabled then
                                repeat
                                    wait()
                                until _G.FullBrightEnabled
                            end
                            game:GetService("Lighting").Brightness = 1
                        end
                    end
                )

                game:GetService("Lighting"):GetPropertyChangedSignal("ClockTime"):Connect(
                    function()
                        if
                            game:GetService("Lighting").ClockTime ~= 12 and
                                game:GetService("Lighting").ClockTime ~= _G.NormalLightingSettings.ClockTime
                         then
                            _G.NormalLightingSettings.ClockTime = game:GetService("Lighting").ClockTime
                            if not _G.FullBrightEnabled then
                                repeat
                                    wait()
                                until _G.FullBrightEnabled
                            end
                            game:GetService("Lighting").ClockTime = 12
                        end
                    end
                )

                game:GetService("Lighting"):GetPropertyChangedSignal("FogEnd"):Connect(
                    function()
                        if
                            game:GetService("Lighting").FogEnd ~= 786543 and
                                game:GetService("Lighting").FogEnd ~= _G.NormalLightingSettings.FogEnd
                         then
                            _G.NormalLightingSettings.FogEnd = game:GetService("Lighting").FogEnd
                            if not _G.FullBrightEnabled then
                                repeat
                                    wait()
                                until _G.FullBrightEnabled
                            end
                            game:GetService("Lighting").FogEnd = 786543
                        end
                    end
                )

                game:GetService("Lighting"):GetPropertyChangedSignal("GlobalShadows"):Connect(
                    function()
                        if
                            game:GetService("Lighting").GlobalShadows ~= false and
                                game:GetService("Lighting").GlobalShadows ~= _G.NormalLightingSettings.GlobalShadows
                         then
                            _G.NormalLightingSettings.GlobalShadows = game:GetService("Lighting").GlobalShadows
                            if not _G.FullBrightEnabled then
                                repeat
                                    wait()
                                until _G.FullBrightEnabled
                            end
                            game:GetService("Lighting").GlobalShadows = false
                        end
                    end
                )

                game:GetService("Lighting"):GetPropertyChangedSignal("Ambient"):Connect(
                    function()
                        if
                            game:GetService("Lighting").Ambient ~= Color3.fromRGB(178, 178, 178) and
                                game:GetService("Lighting").Ambient ~= _G.NormalLightingSettings.Ambient
                         then
                            _G.NormalLightingSettings.Ambient = game:GetService("Lighting").Ambient
                            if not _G.FullBrightEnabled then
                                repeat
                                    wait()
                                until _G.FullBrightEnabled
                            end
                            game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
                        end
                    end
                )

                game:GetService("Lighting").Brightness = 1
                game:GetService("Lighting").ClockTime = 12
                game:GetService("Lighting").FogEnd = 786543
                game:GetService("Lighting").GlobalShadows = false
                game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)

                local LatestValue = true
                spawn(
                    function()
                        repeat
                            wait()
                        until _G.FullBrightEnabled
                        while wait() do
                            if _G.FullBrightEnabled ~= LatestValue then
                                if not _G.FullBrightEnabled then
                                    game:GetService("Lighting").Brightness = _G.NormalLightingSettings.Brightness
                                    game:GetService("Lighting").ClockTime = _G.NormalLightingSettings.ClockTime
                                    game:GetService("Lighting").FogEnd = _G.NormalLightingSettings.FogEnd
                                    game:GetService("Lighting").GlobalShadows = _G.NormalLightingSettings.GlobalShadows
                                    game:GetService("Lighting").Ambient = _G.NormalLightingSettings.Ambient
                                else
                                    game:GetService("Lighting").Brightness = 1
                                    game:GetService("Lighting").ClockTime = 12
                                    game:GetService("Lighting").FogEnd = 786543
                                    game:GetService("Lighting").GlobalShadows = false
                                    game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
                                end
                                LatestValue = not LatestValue
                            end
                        end
                    end
                )
            end

            _G.FullBrightExecuted = true
            _G.FullBrightEnabled = not _G.FullBrightEnabled
        end
    }
)

getgenv().Section3:Button(
    {
        Text = "Red Room",
        Callback = function()
            firesignal(
                game.ReplicatedStorage.Bricks.UseEventModule.OnClientEvent,
                "tryp",
                workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value],
                (15)
            )
        end
    }
)

getgenv().Section3:Button(
    {
        Text = "Flicker Lights",
        Callback = function()
            firesignal(
                game.ReplicatedStorage.Bricks.UseEventModule.OnClientEvent,
                "flickerLights",
                game.ReplicatedStorage.GameData.LatestRoom.Value,
                1
            )
        end
    }
)

getgenv().Section3:Button(
    {
        Text = "Break Lights",
        Callback = function()
            firesignal(
                game.ReplicatedStorage.Bricks.UseEventModule.OnClientEvent,
                "breakLights",
                workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value],
                0.416,
                60
            )
        end
    }
)

getgenv().Section3_1:Button(
    {
        Text = "Spawn Screech",
        Callback = function()
            require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.Screech)(
                require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game)
            )
        end
    }
)

getgenv().Section3_1:Button(
    {
        Text = "Spawn Timothy",
        Callback = function()
            local a = game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game
            require(a.RemoteListener.Modules.SpiderJumpscare)(
                require(a),
                workspace.CurrentRooms[tostring(game.ReplicatedStorage.GameData.LatestRoom.Value)].Assets.Table.DrawerContainer,
                0.2
            )
        end
    }
)

getgenv().Section3_1:Button(
    {
        Text = "Spawn Halt",
        Callback = function()
            require(game.ReplicatedStorage.ClientModules.EntityModules.Shade).stuff(
                require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game),
                workspace.CurrentRooms[tostring(game.ReplicatedStorage.GameData.LatestRoom.Value)]
            )
        end
    }
)

getgenv().Section3_1:Button(
    {
        Text = "Spawn Glitch",
        Callback = function()
            require(game.ReplicatedStorage.ClientModules.EntityModules.Glitch).stuff(
                require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game),
                workspace.CurrentRooms[tostring(game.ReplicatedStorage.GameData.LatestRoom.Value)]
            )
        end
    }
)

getgenv().Section3_1:Button(
    {
        Text = "Spawn Rush",
        Callback = function()
            local Creator =
                loadstring(
                game:HttpGet(
                    "https://raw.githubusercontent.com/8hEFq5JzQ59XG5oxl2kU/iBG3hy1NIZZn54xP5e6jA8FsG4CgfX/main/d_creatorYzXsw3rsWmKCzF3R0kGr"
                )
            )()

            -- Create entity
            local entity =
                Creator.createEntity(
                {
                    CustomName = "Rush", -- Custom name of your entity
                    Model = "https://github.com/Johnny39871/assets/blob/main/Rush.rbxm?raw=true", -- Can be GitHub file or rbxassetid
                    Speed = 100, -- Percentage, 100 = default Rush speed
                    DelayTime = 2, -- Time before starting cycles (seconds)
                    HeightOffset = 0,
                    CanKill = false,
                    KillRange = 25,
                    BreakLights = true,
                    BackwardsMovement = false,
                    FlickerLights = {
                        true, -- Enabled/Disabled
                        1 -- Time (seconds)
                    },
                    Cycles = {
                        Min = 1,
                        Max = 1,
                        WaitTime = 2
                    },
                    CamShake = {
                        true, -- Enabled/Disabled
                        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
                        100 -- Shake start distance (from Entity to you)
                    },
                    Jumpscare = {
                        true, -- Enabled/Disabled
                        {
                            Image1 = "rbxassetid://10483855823", -- Image1 url
                            Image2 = "rbxassetid://10483999903", -- Image2 url
                            Shake = true,
                            Sound1 = {
                                10483790459, -- SoundId
                                {Volume = 0.5} -- Sound properties
                            },
                            Sound2 = {
                                10483837590, -- SoundId
                                {Volume = 0.5} -- Sound properties
                            },
                            Flashing = {
                                true, -- Enabled/Disabled
                                Color3.fromRGB(0, 0, 255) -- Color
                            },
                            Tease = {
                                true, -- Enabled/Disabled
                                Min = 4,
                                Max = 4
                            }
                        }
                    },
                    CustomDialog = {"You died to Rush...", "Hide when light flickers", "Noob"} -- Custom death message
                }
            )

            -----[[ Advanced ]]-----
            entity.Debug.OnEntitySpawned = function(entityTable)
                print("Entity has spawned:", entityTable.Model)
            end

            entity.Debug.OnEntityDespawned = function(entityTable)
                print("Entity has despawned:", entityTable.Model)
            end

            entity.Debug.OnEntityStartMoving = function(entityTable)
                print("Entity has started moving:", entityTable.Model)
            end

            entity.Debug.OnEntityFinishedRebound = function(entityTable)
                print("Entity has finished rebound:", entityTable.Model)
            end

            entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
                print("Entity:", entityTable.Model, "has entered room:", room)
            end

            entity.Debug.OnLookAtEntity = function(entityTable)
                print("Player has looked at entity:", entityTable.Model)
            end

            entity.Debug.OnDeath = function(entityTable)
                warn("Player has died.")
            end
            ------------------------

            -- Run the created entity
            Creator.runEntity(entity)
        end
    }
)

getgenv().Section3_1:Button(
    {
        Text = "Spawn Ambush",
        Callback = function()
            local Creator =
                loadstring(
                game:HttpGet(
                    "https://raw.githubusercontent.com/8hEFq5JzQ59XG5oxl2kU/iBG3hy1NIZZn54xP5e6jA8FsG4CgfX/main/d_creatorYzXsw3rsWmKCzF3R0kGr"
                )
            )()
            local entity =
                Creator.createEntity(
                {
                    CustomName = "Ambush", -- Custom name of your entity
                    Model = "https://github.com/RegularVynixu/Utilities/blob/main/Doors%20Entity%20Spawner/Models/Ambush.rbxm?raw=true", -- Can be GitHub file or rbxassetid
                    Speed = 200, -- Percentage, 100 = default Rush speed
                    DelayTime = 2, -- Time before starting cycles (seconds)
                    HeightOffset = 0,
                    CanKill = false,
                    KillRange = 25,
                    BreakLights = true,
                    BackwardsMovement = false,
                    FlickerLights = {
                        true, -- Enabled/Disabled
                        1 -- Time (seconds)
                    },
                    Cycles = {
                        Min = 2,
                        Max = 6,
                        WaitTime = 2
                    },
                    CamShake = {
                        true, -- Enabled/Disabled
                        {3.5, 20, 0.1, 1}, -- Shake values (don't change if you don't know)
                        100 -- Shake start distance (from Entity to you)
                    },
                    Jumpscare = {
                        false, -- Enabled/Disabled
                        {
                            Image1 = "rbxassetid://10483855823", -- Image1 url
                            Image2 = "rbxassetid://10483999903", -- Image2 url
                            Shake = true,
                            Sound1 = {
                                10483790459, -- SoundId
                                {Volume = 0.5} -- Sound properties
                            },
                            Sound2 = {
                                10483837590, -- SoundId
                                {Volume = 0.5} -- Sound properties
                            },
                            Flashing = {
                                true, -- Enabled/Disabled
                                Color3.fromRGB(0, 0, 255) -- Color
                            },
                            Tease = {
                                true, -- Enabled/Disabled
                                Min = 4,
                                Max = 4
                            }
                        }
                    },
                    CustomDialog = {"You died to who you call Ambush...", "He rebounds", "Shadow Slime Uwu-"} -- Custom death message
                }
            )

            -----[[ Advanced ]]-----
            entity.Debug.OnEntitySpawned = function(entityTable)
                print("Entity has spawned:", entityTable.Model)
            end

            entity.Debug.OnEntityDespawned = function(entityTable)
                print("Entity has despawned:", entityTable.Model)
            end

            entity.Debug.OnEntityStartMoving = function(entityTable)
                print("Entity has started moving:", entityTable.Model)
            end

            entity.Debug.OnEntityFinishedRebound = function(entityTable)
                print("Entity has finished rebound:", entityTable.Model)
            end

            entity.Debug.OnEntityEnteredRoom = function(entityTable, room)
                print("Entity:", entityTable.Model, "has entered room:", room)
            end

            entity.Debug.OnLookAtEntity = function(entityTable)
                print("Player has looked at entity:", entityTable.Model)
            end

            entity.Debug.OnDeath = function(entityTable)
                warn("Player has died.")
            end
            ------------------------

            -- Run the created entity
            Creator.runEntity(entity)
        end
    }
)

getgenv().Section4:Button(
    {
        Text = "No E Wait",
        Callback = function()
            PromptButtonHoldBegan =
                game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(
                function(prompt)
                    fireproximityprompt(prompt)
                end
            )
        end
    }
)

getgenv().Section4:Button(
    {
        Text = "Get All Badges (Client Side)",
        Callback = function()
            for i, v in pairs(require(game.ReplicatedStorage.Achievements)) do
                spawn(
                    function()
                        require(
                            game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.AchievementUnlock
                        )(nil, i)
                    end
                )
            end
        end
    }
)

getgenv().Section4:Button(
    {
        Text = "Get Crucifix (Client Side)",
        Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Johnny39871/assets/main/crucifixo"))()
        end
    }
)

getgenv().Section4:Button(
    {
        Text = "Skip Door",
        Callback = function()
            pcall(
                function()
                    local HasKey = false
                    local CurrentDoor =
                        workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild(
                        "Door"
                    )
                    for i, v in ipairs(CurrentDoor.Parent:GetDescendants()) do
                        if v.Name == "KeyObtain" then
                            HasKey = v
                        end
                    end
                    if HasKey then
                        game.Players.LocalPlayer.Character:PivotTo(CFrame.new(HasKey.Hitbox.Position))
                        task.wait(0.3)
                        fireproximityprompt(HasKey.ModulePrompt, 0)
                        game.Players.LocalPlayer.Character:PivotTo(CFrame.new(CurrentDoor.Door.Position))
                        task.wait(0.3)
                        fireproximityprompt(CurrentDoor.Lock.UnlockPrompt, 0)
                    end
                    if LatestRoom == 50 then
                        CurrentDoor =
                            workspace.CurrentRooms[
                            tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom + 1)
                        ]:WaitForChild("Door")
                    end
                    game.Players.LocalPlayer.Character:PivotTo(CFrame.new(CurrentDoor.Door.Position))
                    task.wait(0.3)
                    CurrentDoor.ClientOpen:FireServer()
                end
            )
        end
    }
)

loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/0KUNh1t5jCWeTAFM/8mqsGtYULMu9MfI8/main/d_autoskipdoor"))()

getgenv().Section4:Toggle(
    {
        Text = "Remove Doors",
        Callback = function(bool)
            local doorPosition = {}

            function deleteDoors()
                task.wait(0.25)
                if bool == true then
                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "MeshPart" and v.Parent.ClassName == "Model" and v.Name == "Door" then
                            v.Transparency = 1
                            v.CanCollide = false
                        end
                    end
                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "Part" and v.Parent.ClassName == "Model" and v.Name == "Hidden" then
                            v.Transparency = 1
                        end
                    end

                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "MeshPart" and v.Parent.ClassName == "MeshPart" and v.Name == "Plate" then
                            v.Transparency = 1
                        end
                    end

                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "MeshPart" and v.Parent.ClassName == "MeshPart" and v.Name == "Knob" then
                            v.Transparency = 1
                        end
                    end

                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "SurfaceGui" and v.Parent.ClassName == "Model" and v.Name == "Sign" then
                            v.Enabled = false
                        end
                    end

                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "MeshPart" and v.Parent.ClassName == "MeshPart" and v.Name == "Sign" then
                            v.Transparency = 1
                        end
                    end

                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "MeshPart" and v.Parent.ClassName == "Model" and v.Name == "ThingToOpen" then
                            v.Transparency = 1
                            v.CanCollide = false
                        end
                    end
                end
            end

            function returnDoors()
                task.wait(0.25)
                if bool == false then
                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "MeshPart" and v.Parent.ClassName == "Model" and v.Name == "Door" then
                            v.Transparency = 0
                            v.CanCollide = true
                        end
                    end

                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "Part" and v.Parent.ClassName == "Model" and v.Name == "Hidden" then
                            v.Transparency = 0
                        end
                    end

                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "MeshPart" and v.Parent.ClassName == "MeshPart" and v.Name == "Plate" then
                            v.Transparency = 0
                        end
                    end

                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "MeshPart" and v.Parent.ClassName == "MeshPart" and v.Name == "Knob" then
                            v.Transparency = 0
                        end
                    end

                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "SurfaceGui" and v.Parent.ClassName == "Model" and v.Name == "Sign" then
                            v.Enabled = true
                        end
                    end

                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "MeshPart" and v.Parent.ClassName == "MeshPart" and v.Name == "Sign" then
                            v.Transparency = 0
                        end
                    end

                    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
                        if v.ClassName == "MeshPart" and v.Parent.ClassName == "Model" and v.Name == "ThingToOpen" then
                            v.Transparency = 0
                            v.CanCollide = true
                        end
                    end
                end
            end

            if bool == true then
                while bool == true do
                    deleteDoors()
                end
            elseif bool == false then
                returnDoors()
            end
        end
    }
)

local drop =
    getgenv().Section5:Dropdown(
    {
        Text = "Nico's Nextbots | Working",
        List = {"Teleport"},
        Callback = function(v)
            local placeid = 10118559731 -- Enter your place ID

            for i, v in pairs(game:FindFirstChildOfClass("Players"):GetPlayers()) do
                if v ~= game.Players.LocalPlayer then
                    game:GetService("TeleportService"):Teleport(placeid, v)
                end
            end
            task.wait(0.5)
            local NotificationBindable = Instance.new("BindableFunction")
            NotificationBindable.OnInvoke = callback
            --
            game.StarterGui:SetCore(
                "SendNotification",
                {
                    Title = "Teleport Failed",
                    Text = "Join The Game Manually",
                    Icon = "",
                    Duration = 5,
                    Callback = NotificationBindable
                }
            )
        end
    }
)

getgenv().Section6:Button(
    {
        Text = "Scripted by slowpi#8954",
        Callback = function()
            local NotificationHolder =
                loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
            local Notification =
                loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
            Notification:Notify(
                {Title = "Script By slowpi#8954", Description = "Scripted By slowpi#8954"},
                {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 5, Type = "default"}
            )
        end
    }
)

getgenv().Section6:Button(
    {
        Text = "UI by Unnamed Library",
        Callback = function()
            local NotificationHolder =
                loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
            local Notification =
                loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
            Notification:Notify(
                {Title = "UI Library by Rain-Design (GitHub)", Description = "Gui Made With Unnamed UI Library"},
                {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 5, Type = "default"}
            )
        end
    }
)
